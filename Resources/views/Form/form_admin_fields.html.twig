{#

This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{# Custom Sonata Admin Extension, template override#}
{% block sonata_admin_orm_one_to_one_widget %}
    {% include 'NetworkingInitCmsBundle:CRUD:edit_orm_one_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_many_widget %}
    {% include 'NetworkingInitCmsBundle:CRUD:edit_orm_many_to_many.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_many_to_one_widget %}
    {% include 'NetworkingInitCmsBundle:CRUD:edit_orm_many_to_one.html.twig' %}
{% endblock %}

{% block sonata_admin_orm_one_to_many_widget %}
    {% if sonata_admin.field_description.name == 'layoutBlock' %}
        {% include 'NetworkingInitCmsBundle:PageAdmin:page_edit_layout_blocks.html.twig' %}
    {% else %}
        {% include 'NetworkingInitCmsBundle:CRUD:edit_orm_one_to_many.html.twig' %}
    {% endif %}
{% endblock %}

{% block sonata_type_model_widget %}
    {#
        This is not the best way to do if
        TODO : improve this part
    #}

    {#model {{ sonata_admin.field_description.mappingtype }}#}

    {% if sonata_admin.field_description is empty %}
        {{ block('choice_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 1 %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 2 %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 8 %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        {#INVALID MODE : {{ id }}#}
        {{ block('choice_widget') }}
    {% endif %}
{% endblock %}

{% block sonata_type_model_list_widget %}
    <div id="field_container_{{ id }}" class="field-container">
        <span id="field_widget_{{ id }}">

            {% if sonata_admin.field_description.associationadmin.id(sonata_admin.value) %}
                {% render url('sonata_admin_short_object_information', {
                'code':     sonata_admin.field_description.associationadmin.code,
                'objectId': sonata_admin.field_description.associationadmin.id(sonata_admin.value),
                'uniqid':   sonata_admin.field_description.associationadmin.uniqid
                }) %}
            {% elseif sonata_admin.field_description.options.placeholder is defined and sonata_admin.field_description.options.placeholder %}
                <span class="inner-field-short-description">
                    {{ sonata_admin.field_description.options.placeholder|trans({}, 'SonataAdminBundle') }}
                </span>
            {% endif %}
        </span>
        <span style="display: none">
            {{ form_widget(form) }}
        </span>

        <span id="field_actions_{{ id }}" class="field-actions">

            {% if sonata_admin.field_description.associationadmin.hasroute('list') and sonata_admin.field_description.associationadmin.isGranted('LIST') %}

                <a href="{{ sonata_admin.field_description.associationadmin.generateUrl('list') }}"
                   onclick="return start_field_dialog_form_list_{{ id }}(this);"
                   class="btn sonata-ba-action"
                   title="{{ 'link_list'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="icon-list"></i>
                    {{ 'link_list'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}

            {% if sonata_admin.field_description.associationadmin.hasroute('create') and sonata_admin.field_description.associationadmin.isGranted('CREATE') %}
                <a href="{{ sonata_admin.field_description.associationadmin.generateUrl('create') }}"
                   onclick="return start_field_dialog_form_add_{{ id }}(this);"
                   class="btn sonata-ba-action"
                   title="{{ 'link_add'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="icon-plus"></i>
                    {{ 'link_add'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}

            {% if sonata_admin.field_description.associationadmin.hasRoute('delete') and sonata_admin.field_description.associationadmin.isGranted('DELETE') %}
                <a href=""
                   onclick="return remove_selected_element_{{ id }}(this);"
                   class="btn sonata-ba-action"
                   title="{{ 'link_delete'|trans({}, 'SonataAdminBundle') }}"
                        >
                    <i class="icon-trash"></i>
                    {{ 'link_delete'|trans({}, 'SonataAdminBundle') }}
                </a>
            {% endif %}
        </span>

        <div class="modal form-horizontal" id="field_dialog_{{ id }}" style="display: none" role="dialog"
             aria-hidden="true">
        </div>

    </div>

    {% include 'NetworkingInitCmsBundle:CRUD:edit_orm_many_association_script.html.twig' %}
{% endblock %}

{% block sonata_type_admin_widget %}
    {#admin {{ sonata_admin.field_description.mappingtype }}#}
    {% if sonata_admin.field_description.mappingtype == 1 %}
        {{ block('sonata_admin_orm_one_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 2 %}
        {{ block('sonata_admin_orm_many_to_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 8 %}
        {{ block('sonata_admin_orm_many_to_many_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }}
    {% endif %}
{% endblock %}

{% block sonata_type_collection_widget %}
    {% if sonata_admin.field_description.mappingtype == 4 %}
        {{ block('sonata_admin_orm_one_to_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }} - type : sonata_type_collection - mapping : {{ sonata_admin.field_description.mappingtype }}
    {% endif %}
{% endblock %}

{# Labels #}
{% block form_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " control-label" }) %}

        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}

        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}

        {% if in_list_checkbox is defined and in_list_checkbox and widget is defined %}
            <label{% for attrname,attrvalue in attr %} {{attrname}}="{{attrvalue}}"{% endfor %}>
                {{ widget|raw }}
                <span>
                    {% if not sonata_admin.admin %}
                        {{- label|trans({}, translation_domain) -}}
                    {% else %}
                        {{- label|trans({}, sonata_admin.field_description.translationDomain) -}}
                    {% endif%}
                </span>
                {% if help_label %}
                    <div class="help-label info-soft" id="help_{{ id }}">

                        {% if not sonata_admin.admin %}
                            {{- help_label|trans({}, translation_domain) -}}
                        {% else %}
                            {{- help_label|trans({}, sonata_admin.field_description.translationDomain) -}}
                        {% endif %}
                    </div>
                {% endif %}
            </label>
        {% else %}
            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {% if not sonata_admin.admin%}
                    {{- label|trans({}, translation_domain) -}}
                {% else %}
                    {{ sonata_admin.admin.trans(label, {}, sonata_admin.field_description.translationDomain) }}
                {% endif %}
                {{ required ? '*' : '' }}
                {% if help_label %}
                <div class="help-label info-soft" id="help_{{ id }}">
                    {% if not sonata_admin.admin %}
                        {{- help_label|trans({}, translation_domain) -}}
                    {% else %}
                        {{- help_label|trans({}, sonata_admin.field_description.translationDomain) -}}
                    {% endif %}
                </div>
                {% endif %}
            </label>
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endblock form_label %}

{% block widget_container_attributes_choice_widget %}
    {% spaceless %}
        id="{{ id }}"
        {% for attrname,attrvalue in attr %}{{ attrname }}="{% if attrname == 'class' %}unstyled {% endif %}{{ attrvalue }}" {% endfor %}
        {% if "class" not in attr %}class="unstyled"{% endif %}
    {% endspaceless %}
{% endblock %}


{% block choice_widget %}
    {% spaceless %}
        {% if compound %}
            <ul {{ block('widget_container_attributes_choice_widget') }}>
                {% for child in form %}
                    <li>
                    {% if not sonata_admin.admin %}
                        {{ form_label(child, child.vars.label|default(null)|trans({}, translation_domain), { 'in_list_checkbox' : true, 'widget' : form_widget(child) } ) }}
                    {% else %}
                        {{ form_label(child, child.vars.label|default(null)|trans({}, sonata_admin.field_description.translationDomain), { 'in_list_checkbox' : true, 'widget' : form_widget(child) } ) }}
                    {% endif %}
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
                {% if empty_value is not none %}
                    <option value="">
                        {% if not sonata_admin.admin %}
                            {{- empty_value|trans({}, translation_domain) -}}
                        {% else %}
                            {{- empty_value|trans({}, sonata_admin.field_description.translationDomain) -}}
                        {% endif%}
                    </option>
                {% endif %}
                {% if preferred_choices|length > 0 %}
                    {% set options = preferred_choices %}
                    {{ block('choice_widget_options') }}
                    {% if choices|length > 0 %}
                        <option disabled="disabled">{{ separator }}</option>
                    {% endif %}
                {% endif %}
                {% set options = choices %}
                {{ block('choice_widget_options') }}
            </select>
        {% endif %}
    {% endspaceless %}
{% endblock choice_widget %}

{% block form_row %}
    {% if sonata_admin is not defined or not sonata_admin_enabled or not sonata_admin.field_description %}
        {% set attr = attr|merge({'class': attr.class|default('') ~ (errors|length > 0 ? ' error' : '') }) %}
        {% if not label_render %}{% set widget_controls = false %}{% endif %}
        {{ block('widget_control_group_start') }}
        {{ widget_prefix|raw }} {{ form_widget(form, _context) }} {{ widget_suffix|raw }}
        {% if widget_remove_btn is defined %}
            {{ block('form_widget_remove_btn') }}
        {% endif -%}
        {{ block('form_message') }}
        {{ block('field_errors') }}
        {{ block('widget_control_group_end') }}
    {% else %}
        {% set inline_block = false %}
        {% if sonata_admin.field_description.options.inline_block is defined and sonata_admin.field_description.options.inline_block %}
            {% set inline_block = true %}

        {% endif %}
        <div class="control-group{% if errors|length > 0 %} error{% endif %}{% if inline_block %} form-horizontal{% endif %}"
             id="sonata-ba-field-container-{{ id }}">
            {% if sonata_admin.field_description.options.no_label is defined and sonata_admin.field_description.options.no_label %}
                {# do nothing #}
            {% else %}
                {% block label %}
                    {% if sonata_admin.field_description.options.name is defined %}
                        {#
                            label_render is default set to false since this bugfix https://github.com/sonata-project/SonataAdminBundle/commit/18ae1b5f1af72ab8a7f9ab42dcb46f48e05c982d
                        #}
                        {#{% if label_render %}#}
                            {{ form_label(form, sonata_admin.field_description.options.name, { 'attr' : {'class' : 'control-label'} }) }}
                        {#{% endif %}#}
                    {% else %}
                        {#{% if label_render %}#}
                            {{ form_label(form, label|default(null), { 'attr' : {'class' : 'control-label'} }) }}
                        {#{% endif %}#}
                    {% endif %}
                {% endblock %}
            {% endif %}

            <div class="{% if  sonata_admin.field_description.options.no_label is defined and not sonata_admin.field_description.options.no_label %}controls{% endif %}sonata-ba-field sonata-ba-field-{{ sonata_admin.edit }}-{{ sonata_admin.inline }} {% if errors|length > 0 %}sonata-ba-field-error{% endif %}">

                {{ form_widget(form) }}
                {{ block('form_message') }}

                {% if errors|length > 0 %}
                    <div class="help-block sonata-ba-field-error-messages">
                        {{ form_errors(form) }}
                    </div>
                {% endif %}
            </div>
        </div>
    {% endif %}
{% endblock form_row %}

{% block collection_widget_row %}
    {% spaceless %}
        <div class="sonata-collection-row">
            {% if allow_delete %}
                <a href="#" class="sonata-collection-delete"></a>
            {% endif %}
            {{ form_row(child) }}
        </div>
    {% endspaceless %}
{% endblock %}

{% block collection_widget %}
    {% spaceless %}
        {% if prototype is defined %}
            {% set child = prototype %}
            {% set attr = attr|merge({'data-prototype': block('collection_widget_row') }) %}
        {% endif %}
        <div {{ block('widget_container_attributes') }}>
            {{ form_errors(form) }}
            {% for child in form %}
                {{ block('collection_widget_row') }}
            {% endfor %}
            {{ form_rest(form) }}
            {% if allow_add %}
                <div><a href="#" class="sonata-collection-add"></a></div>
            {% endif %}
        </div>
    {% endspaceless %}
{% endblock collection_widget %}

{% block sonata_type_immutable_array_widget %}
    {% spaceless %}
        <div class="controls">
            <div {{ block('widget_container_attributes') }}>
                {{ form_errors(form) }}

                {% for key, child in form %}
                    {{ block('sonata_type_immutable_array_widget_row') }}
                {% endfor %}

                {{ form_rest(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock sonata_type_immutable_array_widget %}

{% block sonata_type_immutable_array_widget_row %}
    {% spaceless %}
        <div class="control-group{% if errors|length > 0 %} error{% endif %}"
             id="sonata-ba-field-container-{{ id }}-{{ key }}">

            {{ form_label(child) }}

            <div class="controls sonata-ba-field sonata-ba-field-{{ sonata_admin.edit }}-{{ sonata_admin.inline }} {% if errors|length > 0 %}sonata-ba-field-error{% endif %}">
                {{ form_widget(child) }}
            </div>

            {% if errors|length > 0 %}
                <div class="help-inline sonata-ba-field-error-messages">
                    {{ form_errors(child) }}
                </div>
            {% endif %}
        </div>
    {% endspaceless %}
{% endblock %}
{% block networking_type_autocomplete_widget %}
    {{ form_widget(form) }}
    <script>
        jQuery(document).ready(function () {
            jQuery("#{{ id }}").select2({
                placeholder: "{{ 'Select'|trans({}, sonata_admin.admin.translationDomain) }}",
                allowClear: true
            });
        });
    </script>
{% endblock %}

{% block form_message %}
    {% spaceless %}
        {{ block('form_help') }}
    {% endspaceless %}
{% endblock form_message %}

{% block form_help %}
    {% spaceless %}
        {% if 'checkbox' not in form.vars.block_prefixes %}{# checkbox widget/choice widget problem see https://github.com/phiamo/MopaBootstrapBundle/commit/67406a16b38e5b622fffdd5b9c8a8707ca73f493#commitcomment-1295951 # #}
            {% if help_inline %}<p
                    class="help-inline info-soft">{{ help_inline|trans({}, sonata_admin.admin.translationDomain)|raw }}</p>{% endif %}
        {% endif %}
        {% if help_block %}
            <span class="help-block">{{ help_block|trans({}, sonata_admin.admin.translationDomain)|raw }}</span>{% endif %}
        {% if sonata_admin is defined and sonata_admin.field_description.help is defined %}
            <span class="help-block sonata-ba-field-help">{{ sonata_admin.field_description.help }}</span>
        {% endif %}
    {% endspaceless %}
{% endblock form_help %}

{% block networking_type_iconradio_widget %}
    {% spaceless %}
        {% if expanded %}
            <div {{ block('widget_container_attributes') }}>
                {% for key, child in form %}
                    <div class="pull-left" style="margin:0 20px 10px 0;">
                        {{ form_label(child, child.vars.label|default(null), { 'in_list_checkbox' : true, 'widget' : form_widget(child) } ) }}
                        {% if icons[choices[key].value] %}
                            <img src="{{ asset(icons[choices[key].value]) }}" width="175px"/>
                        {% endif %}
                    </div>
                {% endfor %}
                <div class="clearfix"></div>
            </div>
        {% else %}
            {# just let the choice widget render the select tag #}
            {{ block('choice_widget') }}
        {% endif %}
    {% endspaceless %}
{% endblock %}

{% block checkbox_widget %}
    {% spaceless %}
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}/> {{ help_inline|trans({}, translation_domain)|raw }}
    {% endspaceless %}
{% endblock checkbox_widget %}

{% block sonata_security_roles_widget %}
    {% spaceless %}
        <div class="editable">
            <p><a class="toggle-roles btn btn-primary">{{ 'toggle.roles'|trans({},'NetworkingInitCmsBundle' ) }}</a></p>
            <div id="securityRoles">
                {{ block('choice_widget') }}
            </div>
            <a class="toggle-roles btn btn-primary">{{ 'toggle.roles'|trans({},'NetworkingInitCmsBundle' ) }}</a>
            <script>
             $('.toggle-roles').click(function() {
                $('#securityRoles input[id^="{{ id }}"]').each(function(){
                    // toggle checkbox
                    $(this).prop('checked',!$(this).prop('checked'));
                    // toggle class
                    $(this).parents('label').toggleClass('active');

                });
                 return false;
            });
            </script>
        </div>
        {% if read_only_choices|length > 0 %}
            <div class="readonly">
                <ul>
                    {% for choice in read_only_choices %}
                        <li>{{ choice }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    {% endspaceless %}
{% endblock sonata_security_roles_widget %}

{% block media_entity_type_widget %}
    <ul class="media-list">
        {% for child in form %}
            {% if child.vars.value %}
                {% set object=objects[child.vars.value] %}
                <li class="media">
                    <p>{% media object, 'admin' with {'class': 'media-object'} %}</p>
                    <div class="media-body">
                        {{ form_widget(child) }} <strong class="media-heading">{{ object.name }}</strong>
                    </div>
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}

{% block ckeditor_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value | raw }}</textarea>

    {% if enable %}
        <script type="text/javascript">
            var CKEDITOR_BASEPATH = '/{{ base_path }}';
        </script>

        <script type="text/javascript" src="/{{ js_path }}"></script>

        <script type="text/javascript">
            if (CKEDITOR.instances['{{ id }}']) {
                delete CKEDITOR.instances['{{ id }}'];
            }
            {% for plugin_name, plugin in plugins %}
                CKEDITOR.plugins.addExternal('{{ plugin_name }}', '{{ plugin.path }}', '{{ plugin.filename }}');
            {% endfor %}

            var config = JSON.parse('{{ config | json_encode | raw }}');

            config.language = '{{ app.request.locale }}';
            CKEDITOR.replace('{{ id }}', config);
        </script>
    {% endif %}
{% endblock %}